/* Mini Calculator *
/* calc.y */

%{
#include  <iostream>
#include <string>
int yyerror(char *s);
int yylex(void);

void DebugOutput(const std::string& s){
	std::cout << s << std::endl;
}
%}

%union{
  int		int_val;
  std::string*	op_val;
}

%start	input 

%token <Symbol>	T_class
%type MainProgram
%type MainClass
%type Class
%type ClassDeclaration
%type Main
%%

input: MainProgram 	

MainProgram: MainClass {$$ = new IProgram($1);} Class

MainClass: T_Class T_ID "{" T_public T_static" "void" "main" "(" "String" "[" "]" Identifier ")" "{" Statement "}" "}"
{$$ = new IClass(yyloc.Symbol);} '{' MainClassDeclaration '}'

T_



%%

int yyerror(std::string s)
{
  extern int yylineno;	// defined and maintained in lex.c
  extern char *yytext;	// defined and maintained in lex.c
  
  std::cerr << "ERROR: " << s << " at symbol \"" << yytext;
  std::cerr << "\" on line " << yylineno << std::endl;
  exit(1);
}

int yyerror(char *s)
{
	return yyerror(std::string(s));
}

